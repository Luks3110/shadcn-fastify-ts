{
  "root": true,
  "env": {
    "es2021": true,
    "node": true,
    "jest": true
  },
  "settings": {
    "import/resolver": {
      "typescript": {}
    }
  },
  "extends": [
    "airbnb-base",
    "plugin:import/typescript",
    "plugin:prettier/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.json",
    "tsconfigRootDir": "./"
  },
  "plugins": ["@typescript-eslint", "import", "prettier"],
  "rules": {
    "camelcase": "off",
    "prettier/prettier": "warn",
    "import/prefer-default-export": "off",
    "import/extensions": "off",
    "@typescript-eslint/no-floating-promises": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "custom": {
          "regex": "^I[A-Z]",
          "match": true
        }
      }
    ],
    "function-paren-newline": "off",
    "implicit-arrow-linebreak": "off",
    "object-curly-newline": "off", //for now
    "no-nested-ternary": "off", // boa pratica
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "no-underscore-dangle": "off", // anti @ViniciusRomano
    "comma-dangle": ["error", "only-multiline"],
    "operator-linebreak": [
      "error",
      "after",
      { "overrides": { "?": "before", ":": "before" } }
    ],
    "@typescript-eslint/no-empty-interface": [
      "error",
      {
        "allowSingleExtends": true
      }
    ],
    "no-useless-constructor": "off",
    "@typescript-eslint/no-useless-constructor": "off",
    "@typescript-eslint/require-await": "off"
  }
}
